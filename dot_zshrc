# If you come from bash you might have to change your $PATH.
export PATH="$HOME/bin/node-v18.14.0-linux-x64/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="af-magic"
ZSH_THEME="fino"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


alias Z="zellij"
alias v="nvim"
alias lg="lazygit"
alias slt="pkill -u $USER"
alias gslt="gobsi && pkill -u $USER"
alias cl="clang -Werror -Wall -Wextra"
alias gpt="nohup google-chrome https://chat.openai.com/chat &"
alias intra="nohup google-chrome https://signin.intra.42.fr/users/sign_in &"
alias pp="nohup google-chrome https://cplusplus.com/ &"
alias github="nohup google-chrome https://github.com/ &"
alias yt="nohup google-chrome https://www.youtube.com/ &"
alias discord="nohup google-chrome https://discord.com/channels/@me &"
alias spotify="nohup google-chrome https://open.spotify.com/ &"
alias soundcloud="nohup google-chrome https://soundcloud.com/discover &"
alias correc="cd /tmp && nohup google-chrome --incognito https://signin.intra.42.fr/users/sign_in &"
alias google="nohup google-chrome &"
alias lck="ft_lock"
alias pause="gA && ft_lock"
export USER=jmennock
export MAIL='jimmy.mennock@gmail.com'
export EDITOR=nvim
eval "$(zoxide init zsh)"

unalias ll

# My function

# CPP FUNCTION 
function cppmkdir()
{
    for i in {0..$1}; do mkdir -p ex0$i; done;
}

function cppmake()
{
    tmp=$(ls -ld ex0* | wc -l)
    for ((i=0; i<$tmp; i++)); do
        if [ -f "ex0$i/Makefile" ]; then
            make -C ex0$i 2> /dev/null
        else
            echo "No Makefile found in ex0$i"
        fi
    done
}

function cppmkr()
{
    tmp=$(ls -ld ex0* | wc -l)
    for ((i=0; i<$tmp; i++)); do
        if [ -f "ex0$i/Makefile" ]; then
            make re -C ex0$i 2> /dev/null
        else
            echo "No Makefile found in ex0$i"
        fi
    done
}

function cppmkf()
{
    tmp=$(ls -ld ex0* | wc -l)
    for ((i=0; i<$tmp; i++)); do
        if [ -f "ex0$i/Makefile" ]; then
            make fclean -C ex0$i 2> /dev/null
        else
            echo "No Makefile found in ex0$i"
        fi
    done
}

function cppt()
{
    for arg in "$@"; do
        touch "${arg}.cpp" && touch "${arg}.hpp"
    done
}

# GIT FUNCTION

function gobsi()
{
  (cd ~/"Obsidian Vault/" && gA)
}

function gSobsi()
{
  (cd ~/"Obsidian Vault/" && git status)
}

function gS()
{
    git status
}

function gAm()
(

    set -e
    git status
    git add --all
    git commit -m $1
    git push
)

function gA()
(

    set -e
    git status
    git add --all
    git commit -m "School session"
    git push
)

# ll FUNCTION

function ll()
{
  exa \
    --tree \
    --level 1 \
    --group-directories-first \
    --icons \
    --classify \
    --long \
    --no-filesize \
    --no-permissions \
    --no-user \
    --no-time \
    --git \
    "$@"
}

alias ll2='ll -L2'
alias ll3='ll -L3'
alias ll4='ll -L4'

alias la='ll -a'

alias la2='la -L2'
alias la3='la -L3'
alias la4='la -L4'


#transcendence 
function smnext()
{
  git switch "$1";
  make update \
  && make \
  && docker logs gunicorn --follow
}

function switchmake()
{
  make fclean
  git switch "$1"
  if [ "$?" -eq 0 ]; then
    make update \
    && make \
    && docker logs gunicorn --follow
  else
    lazygit
    smnext "$1"
  fi
}

# Running Zellij automaticly
# [[ -z "$ZELLIJ" ]] && [[ $(command -v zellij) ]] \
#    && [[ ! $(pgrep -f 'zellij attach') ]] &&\
#  exec zellij attach -c J
eval "$(zellij setup --generate-auto-start zsh)"

#nix-shell -p dust -> dispplay a subshell with the package targeted
#https://search.nixos.org/packages dock to find if package exit.
